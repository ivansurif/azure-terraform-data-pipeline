name: Read Users in AAD

on:
  workflow_dispatch

env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  ARM_ACCESS_KEY: ${{ secrets.ARM_ACCESS_KEY }}
  GITHUB_TOKEN: ${{ secrets.GH_TOKEN}}
  GITHUB_OWNER: ${{ secrets.GH_OWNER }}
  EXAMPLE_USER_AAD_USER_OBJECT_ID: ${{ secrets.EXAMPLE_USER_AAD_USER_OBJECT_ID }}

jobs:

  read_users:
    environment: ad-hoc
    name: Read Users in AAD
    runs-on: ubuntu-latest
    strategy:
      matrix: { folder: [ 'terraform/azure/tier0/guest_users' ] }
      #matrix: { folder: [ 'terraform/azure/tier0/guest_users', 'terraform/azure/tier0/common_services' ] }
    defaults:
      run:
        shell: bash
        working-directory: ${{ matrix.folder }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Print CWD
      run: pwd

    - name: Configure Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 0.15.0

    - name: Get Terraform state
      run: terraform init

    #- name: Import existing user
    #  run: terraform import azuread_user.example b77e8523-0fed-4396-a2e6-f5b90a87cf79

    #- name: Terraform Apply 1
    #  run: terraform apply -target=azuread_user.example -auto-approve -input=false -var 'user_principal_name=$EXAMPLE_USER_AAD_USER_PRINCIPAL_NAME' -var 'user_name=$EXAMPLE_USER_AAD_USER_NAME'

    #- name: Terraform Apply 2
    #  run: terraform apply -auto-approve -input=false

    - name: Print AAD users
      run: terraform output all_users